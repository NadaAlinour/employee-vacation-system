// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationPersistence.Context;

#nullable disable

namespace VacationPersistence.Migrations
{
    [DbContext(typeof(VacationDbContext))]
    [Migration("20230801081553_seedSkills")]
    partial class seedSkills
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VacationPersistence.Database.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("Date");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsVacationAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.EmployeeVacation", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("VacationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ActualEndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("ExpectedEndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("EmployeeID", "VacationID");

                    b.HasIndex("VacationID");

                    b.ToTable("EmployeeVacations");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Hire", b =>
                {
                    b.Property<int>("HireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HireID"));

                    b.Property<int>("EndYears")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<int>("StartYears")
                        .HasColumnType("int");

                    b.HasKey("HireID");

                    b.ToTable("Hires");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Rule", b =>
                {
                    b.Property<int>("RuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleID"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<int>("HireID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTimes")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.Property<int>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("RuleID");

                    b.HasIndex("HireID");

                    b.HasIndex("UnitID");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillID = 1,
                            SkillName = "Problem Solving"
                        },
                        new
                        {
                            SkillID = 2,
                            SkillName = "Object Oriented Programming"
                        },
                        new
                        {
                            SkillID = 3,
                            SkillName = "Team Management"
                        });
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Unit", b =>
                {
                    b.Property<int>("UnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitID"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Vacation", b =>
                {
                    b.Property<int>("VacationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleID")
                        .HasColumnType("int");

                    b.Property<int>("RulesID")
                        .HasColumnType("int");

                    b.HasKey("VacationID");

                    b.HasIndex("RuleID");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.VacationRule", b =>
                {
                    b.Property<int>("VacationID")
                        .HasColumnType("int");

                    b.Property<int>("RuleID")
                        .HasColumnType("int");

                    b.HasKey("VacationID", "RuleID");

                    b.HasIndex("RuleID");

                    b.ToTable("VacationRules");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.EmployeeSkill", b =>
                {
                    b.HasOne("VacationPersistence.Database.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationPersistence.Database.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.EmployeeVacation", b =>
                {
                    b.HasOne("VacationPersistence.Database.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationPersistence.Database.Models.Vacation", "Vacation")
                        .WithMany()
                        .HasForeignKey("VacationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Rule", b =>
                {
                    b.HasOne("VacationPersistence.Database.Models.Hire", "Hire")
                        .WithMany()
                        .HasForeignKey("HireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationPersistence.Database.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hire");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.Vacation", b =>
                {
                    b.HasOne("VacationPersistence.Database.Models.Rule", "Rule")
                        .WithMany()
                        .HasForeignKey("RuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("VacationPersistence.Database.Models.VacationRule", b =>
                {
                    b.HasOne("VacationPersistence.Database.Models.Rule", "Rule")
                        .WithMany()
                        .HasForeignKey("RuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationPersistence.Database.Models.Vacation", "Vacation")
                        .WithMany()
                        .HasForeignKey("VacationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");

                    b.Navigation("Vacation");
                });
#pragma warning restore 612, 618
        }
    }
}
